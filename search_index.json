[["index.html", "Continuing education: R General information on the course What can I learn from this tutorial? Provisional schedule for this seminar What can I do if I have problems with my R code?", " Continuing education: R Lara Kobilke, IfKW, Ludwig-Maximilians-Universität München 2023-04-25 General information on the course Dear colleagues, This online tutorial will accompany my seminar on “Continuing education for employees: R” at the IfKW (Ludwig-Maximilians-Universität München, SS2023). The seminar will take place in person at Oettingenstraße 67, Room 131 on Wednesdays from 12:15-13:45 pm. The seminar is open to everyone at all times, which means that you may attend at your convenience without any prior registration. However, whenever you decide to attend the seminar, it is imperative that you bring along a laptop so that you may test the R code yourself. Whenever you are unable to attend my live sessions, this tutorial will be a helpful resource for catching up. Additionally, it provides the flexibility to review and study the material at your own pace. It can also serve as a useful reference book for those who are conducting their first research project in R and need to look up specific functions! What can I learn from this tutorial? After completing the entire tutorial, you will have acquired three important skills: Mastery of using R and RStudio for data management and analysis, which will replace SPSS at the IfKW. Understanding the benefits of using R over SPSS. Developing a P A S S I O N for working with R. During the first part of the seminar, we will work through the tutorial and complete exercises together. As you begin to feel more comfortable with R, we may switch to a flipped classroom model to allow for more hands-on practice under my direct supervision. This would involve you reading through the tutorial in between classes (approximately 30-45 minutes per week) and completing additional exercises together during class time. Each chapter of this tutorial consists of: an introduction to new functions/analysis methods in R, including corresponding R code main take-aways that you should remember information on additional tutorials / sources exercises to practice your new skills (you’ll often work through these with your colleagues) Provisional schedule for this seminar Session (19.04.2023): Introduction to the teaching concept as well as to R and RStudio. In this session, I will answer all of your burning questions: How is the R course structured? How does it fit into the transition to R at the institute? How do I install the necessary software? What packages (i.e., R extensions) will we be working with? Additionally, I will demonstrate how to import a dataset, manipulate it, and generate descriptive results with just a few clicks using RStudio and the tidyverse + tidycomm packages. Session (26.04.2023): Getting started with Base R. In this session, you will use R as a calculator, work with vectors, and learn to open datasets. The session is designed to help you recognize tutorials and answers in help forums that use Base R and distinguish them from those that use tidyverse R. Later on, you will only use tidyverse R, but you must be able to differentiate it from Base R to find helpful resources on the internet. Session (03.05.2023): Using the tidyverse metapackage for data management. Part I. Introduction to the logic of tidyverse metapackage for simplifying your data management. You will learn why the tidyverse is A W E S O M E and how easily it allows you to filter, group, and generate descriptions of data. Session (10.05.2023): Using the tidyverse metapackage for data management. Part II. In this session, you will have plenty of time to solve exercises, i.e., to flex your tidyverse skills. Session (17.05.2023): Using the tidyverse metapackage for data management. Part III. Your last tidyverse session will cover advanced tidyverse operations that we do not teach to our Bachelor students, but that will make your own life as a researcher S O M U C H more enjoyable. These are topics like reading in multiple datasets, merging them, selecting and renaming multiple columns, or applying a function across many columns. Session (31.05.2023): Using the ggplot2 package for data visualization. Part I. Introduction to the grammar of graphics to create beautiful, publication-ready graphs. You will learn how to create advanced graphs that will enhance your publications. Session (07.06.2023): Using the ggplot2 package for data visualization. Part II. In this session, you will have plenty of time to solve exercises, i.e., to flex your ggplot2 skills. Session (14.06.2023): Perform significance tests. In this session, we will cover the usual inference tests that we teach our students: chi-square, t-test, ANOVA, and linear regression. We will also have a look at Pearson’s r and partial correlation, of course. Session (21.06.2023): Using the tidycomm package to do a quick inspection of new datasets and run own analyses. In this session, you will learn how to do quick (but not dirty) inspections of brand new data. Julian Unkel’s tidycomm package makes this process even quicker than using the classic tidyverse or Base R approach that we will compare against. After that, you’ll run your own significance tests on the data. Session (28.06.2023): Tell me your preferences! This session is open for your preferences. I could cover one or two of the following topics such as: a) even more advanced data management using the tidyverse, b) an introduction to regular expressions using stringr, c) perform moderation and mediation analyses with processR, d) working with panel / multilevel data, e) estimating SEMs using lavaan, or f) writing articles in RMarkdown (also used to write this tutorial). We could even cover topics such as scraping or performing tidytext analyses, but that would become a very basic introduction. Session (05.07.2023): Tell me your preferences! Part II. This session is again open for your preferences (see session 10). Session (12.07.2023): Getting started with a good coding style. In this session, we will discuss good coding practices. When you first learn how to use R, your primary focus is on getting the job done. However, as you advance, you will want to have well-designed and organized code. By adopting best practices early on and internalizing them, you can make your life easier and streamline your coding process. Session (19.07.2023): Open Q&amp;A. Provide me with open questions, your current coding problems or anything else that you feel needs to be addressed. I’ll do my best to provide answers and solve your issues! Note: In the event of any delays or a particularly clever audience ;), changes to the schedule may occur. Therefore, please check the schedule periodically if you are only interested in attending the seminar for a particular topic or wish to skip specific content. What can I do if I have problems with my R code? Besides asking me during the course ( :) ) there are some great places to have a look at when you encounter problems. To give you a head start, here’s a quick rundown of the three best places to look if you have a problem with your code: R’s integrated help function: Use the ?-function whenever possible. Let’s assume you struggle with creating a histogram for your data (hist function in R). You can open the R documentation of the hist function in R by writing: ?hist Preview of ?hist in R: Search engines: Like Bing or Google. Yup, those who work with R keep googling all the time! Nobody knows all the code and errors by heart. Often you can find perfect answers to your questions on Stackoverflow, StatsExchange, or Rseek because other people had exactly the same problems. And more importantly, the communities on these websites are very friendly and helpful. Packages’ reference manuals: Finally, problems with R packages (we’ll get to packages later, see: Packages) can often be solved by looking at their reference manuals (an overview document containing all of a package’s functions). For example, you can learn more about dplyr (a data management package that we are going to use later in this tutorial) by visiting its reference manual on “CRAN” (Comprehensive R Archive Network), which is R’s main repository: https://cran.r-project.org/web/packages/dplyr/dplyr.pdf. That’s everything there is. I hope you find my class and this tutorial to be a valuable resource on your journey with R. I did not take the easy road to learning R, so I am really looking forward to show you the quick way! I’ve tested (a variation of) this tutorial on 4 classes of BA and MA students in Zurich and Munich before, so don’t be afraid: You got this! Let’s now begin with our first tutorial: Tutorial: Installing &amp; Understanding R/R Studio "],["tutorial-installing-understanding-rr-studio.html", " 1 Tutorial: Installing &amp; Understanding R/R Studio 1.1 What is R? 1.2 Using R is easy! 1.3 Installing R 1.4 Installing R Studio 1.5 Updating R and R Studio 1.6 How does R work? 1.7 Why should I use R? 1.8 How does R Studio work? 1.9 Why aren’t we using a GUI for point-and-click analyses? 1.10 Packages 1.11 Take-Aways 1.12 Additional tutorials", " 1 Tutorial: Installing &amp; Understanding R/R Studio After working through Tutorial 1, you’ll… know how to install R and R Studio know how to update R and R Studio understand the layout of R Studio 1.1 What is R? R is the programming language we’ll use to import, edit, and analyze data. It’s original form is called Base R. A more recent and streamlined syntax for R is called the tidyverse. Base R and the tidyverse are both popular approaches to data manipulation and analysis in R, but they differ in their philosophies and syntax. Base R is the set of core functions that come with the R programming language without any additional installations. These functions allow you to perform a wide range of data manipulation and analysis tasks, including reading and writing data, transforming and summarizing data, and creating visualizations. Base R is designed to be efficient and flexible, and it provides a lot of low-level functionality for working with data. The tidyverse, on the other hand, is a collection of R packages (thus called a “meta-package”) developed by Hadley Wickham and his team at RStudio. The tidyverse is very readable code: You can usually read the code out loud and understand what it is doing. Moreover, the tidyverse is built around a set of principles and syntax that emphasize the importance of tidy data, i.e. data that is organized into rows and columns, where each column represents a variable and each row represents an observation. As you can see: tidy data looks just like your typical SPSS data window! Our approach to teaching our BA students is to use the tidycomm package developed by Julian Unkel. It uses the tidyversestyle of coding, but incorporates many convenience functions for communication researchers, such as calculating ICR tests (e.g., Krippendorff’s alpha or Fretwurst’s lotus). Julian, Mario Haim, and I are currently enhancing the package to greatly simplify data analysis for our students as compared to using SPSS. For example, with each significance test tidycomm will automatically provide students suitable graphical visualizations. To convince yourself of the ease of working with tidycomm, please refer to the following section: Using R is easy! A hint for best practice: Usually, R users decide to use either Base R or the tidyverse at some point. When writing code, it’s a good practice to stick two one of the two approaches, Base R or tidyverse, and not mix them up because that makes the code less readable (just like writing in German dialect, Bavarian and East Frisian are both German, but a Bavarian will struggle more when reading a text that is partly written in East Frisian). The approach of this tutorial is to use the first lesson to teach you a little bit of Base R – just enough that you are able to identify code as being written in Base. This way, you can distinguish helpful answers in online forums that are written in “your dialect” (i.e. tidyverse R) from those that are not written in your dialect (i.e., Base R). After that first lesson, we will stick to the tidyverse approach because it is so much more similar to SPSS and much more readable and easy-to-learn for beginners. Image: R and (meta-)packages covered in this course 1.2 Using R is easy! R programming can be made easy with the usage of tidyverse and tidycomm. Allow me to demonstrate this by importing the well-known Worlds of Journalism data into R, filtering out all non-German journalists, describing the data using descriptive statistics, and analyzing it with an ANOVA. Image: Loading data into R using the menu via File &gt; Import Dataset &gt; [your data type, e.g. SPSS] Image: Choose your data in your folders and hit “Import” Let’s activate the tidyverse and tidycomm packages (we will come back to this later in the Packages section): library(tidyverse) library(tidycomm) And now, let us filter our data to include only German journalists in the dataset. WoJ &lt;- WoJ %&gt;% filter(country == &quot;Germany&quot;) ## # A tibble: 173 × 8 ## country reach employment temp_contract autonomy_selection work_experience ## &lt;fct&gt; &lt;fct&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Germany National Full-time Permanent 5 10 ## 2 Germany National Full-time Permanent 3 7 ## 3 Germany Local Full-time Permanent 4 24 ## 4 Germany Local Full-time Permanent 5 20 ## 5 Germany Regional Freelancer &lt;NA&gt; 2 20 ## 6 Germany National Full-time Permanent 3 15 ## 7 Germany Regional Full-time Permanent 4 7 ## 8 Germany Local Full-time Permanent 5 35 ## 9 Germany National Part-time Permanent 4 40 ## 10 Germany Regional Full-time Permanent 4 35 ## # ℹ 163 more rows ## # ℹ 2 more variables: trust_parliament &lt;dbl&gt;, trust_government &lt;dbl&gt; Looks great! Now let’s describe our data. Let’s get some descriptives for the variable “reach”, i.e., whether the journalists are working for regional or national outlets. WoJ %&gt;% describe_cat(reach) ## # A tibble: 1 × 6 ## Variable N Missing Unique Mode Mode_N ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; ## 1 reach 173 0 3 Regional 80 Repeat this for the variable “autonomy_selection,” which refers to the level of autonomy that journalists feel they have in their daily work life. WoJ %&gt;% describe(autonomy_selection) ## # A tibble: 1 × 15 ## Variable N Missing M SD Min Q25 Mdn Q75 Max Range ## &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 autonomy_select… 172 1 3.97 0.881 1 3 4 5 5 4 ## # ℹ 4 more variables: CI_95_LL &lt;dbl&gt;, CI_95_UL &lt;dbl&gt;, Skewness &lt;dbl&gt;, ## # Kurtosis &lt;dbl&gt; It’s time to run an ANOVA with the two variables! IV = reach, DV = autonomy_selection. WoJ %&gt;% unianova(reach, autonomy_selection, descriptives = TRUE, post_hoc = TRUE) ## # A tibble: 1 × 13 ## Var F df_num df_denom p eta_squared M_Local SD_Local M_Regional ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 autonom… 9.45 2 169 1.29e-4 0.101 4.28 0.743 4.04 ## # ℹ 4 more variables: SD_Regional &lt;dbl&gt;, M_National &lt;dbl&gt;, SD_National &lt;dbl&gt;, ## # post_hoc &lt;list&gt; That was pretty easy, wasn’t it? 1.3 Installing R When you are ready to install R, use Cran to install the newest version of Ra nd its GUI (graphical user interface) (version 4.2.3, realeased 2023-03-15, called “Shortstop Beagle”). You’ll have to specify your operation system to download the right version: Installer for Windows Installer for macOS 10.13 (High Sierra) and higher Installer for macOS 11 (Big Sur) and higher Mac Users: Please read the documentation of the installers on this site. You might need to install other dependencies to make R work. 1.4 Installing R Studio Next, install R Studio. R Studio is a desktop application with a graphical interface that facilitates programming with R. The newest version of R Studio can be downloaded via this Link. 1.5 Updating R and R Studio If you have already installed R and RStudio, please update your current version to the latest version. This way, we’ll all know that our versions are compatible. 1.5.1 On Windows Updating on Windows is tricky. Therefore, you can use a package called installr, which helps you manage your update. First, install the installr package in the R GUI (not RStudio!). Use the following code by copy-pasting it into the RStudio console and running it: # installing/loading the package: if(!require(installr)) { install.packages(&quot;installr&quot;); require(installr) } #load / install+load installr After you have run the above code, let’s start the updating process of your R installation by using the updateR() function. It will check for newer versions, and if one is available, will guide you through the decisions you’d need to make. You need to to copy the below code to your console and run it: # using the package: updateR() Finally, update R Studio. Updating RStudio is easy, just open RStudio and go to Help &gt; Check for Updates to install a newer version. 1.5.2 On MAC Go to CRAN and install the newer package installer. After that update R Studio. Updating RStudio is easy, just open RStudio and go to Help &gt; Check for Updates to install a newer version. 1.6 How does R work? R is an object- and function-oriented programming language. Chambers (2014, p. 4) explains “object- and function-oriented” like this: Everything that exists is an object. Everything that happens is a function call. In R, you will assign values (for instance, single numbers/letters, several numbers/letters, or whole data files) to objects in R to work with them. For example, this command will assign the letters “hello” to an object called word by using the assign operator &lt;- (a function used to assign values to objects): word &lt;- &quot;hello&quot; The type of each object will dictate what sorts of computations you may perform with this object. The object word, for example, is distinguished by the fact that it is made up of characters (i.e., it is a word) - which may make it impossible to compute the object’s mean value, for example (which is possible only for objects consisting of numerical data). 1.7 Why should I use R? There are several reasons why I’m an advocate of R (or similar programming languages such as Python) over programs such as SPSS. R is free. Other than most other (statistical) programs, you do not need to buy it (or rely on an university license, that is likely to run out once you leave your department). R is an open source program. Other than most other programs, the source code - i.e., the basis of the program - is freely available. So are the hundred of packages (we’ll get to those later – these are basically additional functions you may need for more specific analyses) on CRAN that you can use to extend R’s base functions. R offers you flexibility. You can work with almost any type of data and rely on a large (!) set of functions to import, edit, or analyze such data. You can perform “complex” statistical modeling like SEM, panel analysis, multilevel analysis, and computational methods in R. And if the function you need to do so hasn’t been implemented (or simply does not exist yet), you can write it yourself! R supports package development! Learning R increases the chances of our students on the job market (and maybe also yours!). For many jobs (e.g., market research, data science, data journalism), applicants are required to know at least one programming language. You can write your scientific articles in R (using RMarkdown). This allows for the complete reproducibility of the analysis presented in the article. All of the code, data, and visualizations can be easily shared and reproduced, ensuring transparency and enhancing the credibility of the research. Conveniently, documents can automatically update tables and graphs when changes are made to the underlying data or analysis. This saves time and reduces the likelihood of errors when updating results in response to reviewer feedback or other changes in the research. 1.8 How does R Studio work? As mentioned before, R Studio is a graphical interface which facilitates programming with R. It contains up to four main windows, which allow for different things: Writing your own code (Window 1: Source). Important: When first installing R/R Studio and opening R Studio, you may not see this window right away. In this case, simply open it by clicking on File/New File/R Script. Executing your own code (Window 2: Console) Inspecting objects (Window 3: Environment) Visualizing data, searching for help, updating packages etc. (Window 4: Files/Plots/Packages etc.) Image: Four main windows in R Please note that the specific set-up of your R Studio may look different (the order of windows may vary and so may the windows’ names). I have made the experience that having these four windows open works best for me. This may be different for you. If you want to modify the appearance of your R Studio, simply choose “Tools/Global Options/Pane Layout”. In the options menu, you can perform various cool customizations, such as enabling rainbow parentheses (highly recommended). With this feature, a starting parenthesis will be displayed in the same color as its corresponding closing parenthesis. Image: Changing the Layout Image: Activating rainbow parantheses 1.8.1 Source: Writing your own code Using the window “Source”, you’ll write your own code to execute whichever task you want R to fulfill. 1.8.1.1 Writing Code Let’s start with an easy example: Assume you simply want R to print the word “hello”. In this case, you would first write a simple command that assigns the word “hello” to an object called word. The assigment of values to named objects is done via either the operator “&lt;-” or the operator “=”. The left side of that command contains the object that should be created; its right side the values that should be assigned to this object. In short, this command tells R to assign the world “hello” to an object called word. word &lt;- &quot;hello&quot; Image: “Source” 1.8.1.2 Annotating Code Another helpful aspect of R is that you can comment your own code. Often, this is very helpful for understanding your code later (if you write several hundred lines of codes, you may not remember their exact meaning months later). Comments or notes can be made via hashtags #. Anything following a hashtag will not be considered code by R but be ignored instead. word &lt;- &quot;hello&quot; # this line of code assigns the word &quot;hello&quot; to an object called word 1.8.1.3 Executing Code We now want to execute our code. Doing so is simple: Mark the parts of the code you want to run (for instance, single rows of code or blocks of code across several rows) Either press Run (see upper right side of the same window) or press Ctrl / Command + Enter (On Mac OS X, hold the command key and press return instead). R should now execute exactly those lines of codes that you marked (hereby creating the object word). If you haven’t marked any specific code, all lines of code will be executed. Image: Executing Code 1.8.1.4 Saving Code A great feature of R is that it makes analyses easily reproducible - given that you save your code. When reopening R Studio and your script, you can simply “rerun” the code with one click and your analysis will be reproduced. To save code, you have two options: Choose the menu option File/Save as. Important: Code needs to be saved with the ending “.R”. Chose the Save-button in the source window and save your code in the correct format, for instance as “MyCode.R” (some advice: try to avoid numbers or dates as file names because this can break the saving process). Image: Saving code 1.8.2 Console: Printing results Results of executing code are printed in a second window called “Console”, which includes the code you ran and the object you may have called when doing so. Previously, we defined an object called word, which consists of the single word “hello”. Thus, R prints our code as well as objects called when running this code (here, the object word) in the console. word &lt;- &quot;hello&quot; word ## [1] &quot;hello&quot; Image: Window “Console” 1.8.3 Environment: Overview of objects The third window is called “Environment”1. This window displays all the objects currently existing - in our case, only the object “word”. As soon as you start creating more objects, this environment will fill up. If you are an SPSS user, you may find this window very similar to what is referred to as the Datenansicht / Data overview in SPSS. However, the R version of this view is much more flexible as it can contain multiple datasets simultaneously in one environment. Image: Window “Environment” It is important to note that we can visually examine any object in R by using the View() command. Upon running this command, a new tab will open in the “Source” window. While this may not seem particularly useful at the moment, it becomes immensely helpful when working with larger datasets that have multiple observations and variables. View(word) Image: Window “View” 1.8.4 Plots/Help/Packages: Do everything else The fourth window in the standard R Studio interface, which contains several sub-sections like “Files”, “Plots”, or “Packages”, has specific functions that you will understand later. For example, it can be used to plot and visualize results or to see which packages are currently loaded. Image: Window “Files/Plots/Packages” 1.9 Why aren’t we using a GUI for point-and-click analyses? SPSS-trained colleagues, like myself, may miss having a graphical user interface (GUI) in RStudio for point-and-click analyses. For those who prefer such a GUI, they can install jamovi, which is a GUI for R. However, we have decided against introducing jamovi to our students and instead teach them coding directly. The reason for this is that coding skills allow for faster adaptation of the written syntax to fit individual needs. Those who first learn to handle a statistics program through point-and-click may have a weaker understanding of the resulting code. If adjustments to the code need to be made later on, students may not be able to do so, and analyses may need to be redone completely by clicking instead of quickly adapting them throughout the script (e.g., withSearch + Replace). Thus, introducing coding to students promotes their statistical understanding and efficiency. That is why we have chosen this approach and recommend it to colleagues. However, feel free to use jamovi. 1.10 Packages While Base R, i.e., the standard version of R, already includes many helpful functions, you may at times need other, additional functions. For instance, if we want to perform text analysis in R we’ll need to use specific packages including additional functions. Packages are collections of topic-specific functions that extend the functions implemented in Base R. In the spirit of “open science”, anyone can write and publish these additional functions and related packages and anyone can also access the code used to do so. You’ll find a list of all of R packages here. In this seminar, we’ll for instance use packages like dplyr for advanced data management. 1.10.1 Installing packages To use a package, you have to install it first. Let’s say you’re interested in using the package dplyr. Using the command install.packages(), you can install the package on your computer. You’ll have to give the function the name of the package you are interested in installing. install.packages(&quot;dplyr&quot;) After the installation, the package is now available locally on your computer. It is important to note that the install.packages() command only needs to be executed once for each package. In subsequent R sessions (e.g., after closing RSTudio and reopening it the next day), you only need to activate the installed package, which we will learn in the following section. 1.10.2 Activating packages Before we are able to use a package, we need to activate it in each session. Thus, you should not only define a working directory at the beginning of each session but also activate the packages you want to use via the library()_ command. Again, you’ll have to give R the name of the package you want to activate: library(dplyr) You can also use the name of the package followed by two colons :: to activate a package directly before calling one of its functions. For instance, I do not need use to activate the dplyr package (by using the library() function) to use the function summarize() if I use the following code: dplyr::summarize() 1.10.3 Getting information about packages The package is installed and activated - but how can we use it? To get an overview of functions included in a given package, you can consult its corresponding “reference manual” (overview document containing all of a package’s functions) or, if available, its “vignette” (tutorials on how to use selected functions for the corresponding package) provided by a package’s author on a website called “CRAN”. The easiest way to finding these manuals/vignettes is Google: Simply google CRAN dplyr, for instance, and you’ll be guided to the following website: Image: Cran Overview dplyr package The first paragraph (circled in red) gives you an overview of aspects for which this package may be useful. The second red-circled area links to the reference manual and the vignette. You can, for instance, check out the reference manual to get an idea of the many functions the dplyr package contains. 1.11 Take-Aways Window “Source”: used to write/execute code in R Window “Console”: used to return results of executed code Window “Environment”: used to inspect objects on which to use functions Window “Files/Plots/Packages etc.”: used for additional functions, for instance visualizations/searching for help/activating or updating packages 1.12 Additional tutorials You still have questions? The following tutorials &amp; papers can help you with that: YaRrr! The Pirate’s Guide to R by N.D.Phillips, Tutorial 2 Computational Methods in der politischen Kommunikationsforschung by J. Unkel, Tutorial 1 SICSS Boot Camp by C. Bail, Video 1 wegweisR by M. Haim, Video 1 R Cookbook by Long et al., Tutorial 1 Now that you know the layout of R, we can get started with some real action: Tutorial: Using R as a calculator again, this only applies for the way I set up my R Studio. You can change this via “Tools/Global Options/Pane Layout”↩︎ "],["tutorial-using-r-as-a-calculator.html", " 2 Tutorial: Using R as a calculator 2.1 Using variables for calculation 2.2 Using vectors for calculation 2.3 Selecting values from a vector 2.4 Take-Aways 2.5 Additional tutorials", " 2 Tutorial: Using R as a calculator After working through Tutorial 2, you’ll… be able to work with mathematical operators in R be able to use mathematical operators on variables and vectors subset values from vectors One of the first things everyone learns in R is to use R as a calculator. You have access to many mathematical operators in R (e.g. +, -, *, /, ^). Let’s try some of them. Addition: 5+7 ## [1] 12 Subtraction: 12-7 ## [1] 5 Exponentiation: 3^3 ## [1] 27 2.1 Using variables for calculation You can also assign numbers to variables with the assign operator “&lt;-”. We have already talked about assigning word or numbers to variables in the chapter Writing Code. Please remember that a variable name in R can include numeric and alphabets along with special characters like dot (.) and underline (_).’ Therefore, these are good options to name your variables: my_1st_number &lt;- 3 my.1st.numer &lt;- 3 Do ! N O T ! use these variable names because they will cause errors and throw warning messages. I have therefore put the code as annotation to avoid the warning messages (with #): # _number &lt;- 3 # .number &lt;- 3 # my-1st-number &lt;- 3 You can use variables in your calculations by assigning the numbers to variables (i.e. store the numerical value in the variable).’ five &lt;- 5 seven &lt;- 7 twelve &lt;- five + seven # here you add the two variables in which the numbers are stored. The result of the addition is stored in the variable &quot;twelve&quot; twelve # now you have to retrieve the content of the variable, so that the result is printed to the console ## [1] 12 The names of the variables are freely selectable. For example, you can also proceed like this: three &lt;- 5 three # print the content of the variable to the console ## [1] 5 2.2 Using vectors for calculation You can also store more than one number in a variable. We call this process “creating vectors” because variables that contain more than one number are called “vectors” in R. Vectors are created using the combine function c() in R. twelve &lt;- c(1,2,3,4,5,6,7,8,9,10,11,12) twelve # print the content of the variable to the console ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 Again, the variable name is chosen arbitrarily. You can also do this: twelve &lt;- c(4,10,15,21,33) twelve # print the content of the variable to the console ## [1] 4 10 15 21 33 You can use mathematical operations on vectors (e.g., +, -, * and /). Let’s create two vectors “weight” and “height” that contain the weight and height measures of 6 individuals. For example, the first individual weighs 60 kg and is 1.75 m tall: weight &lt;- c(60, 72, 57, 90, 95, 72) height &lt;- c(1.75, 1.80, 1.65, 1.90, 1.74, 1.91) Now we can calculate the Body Mass Index (BMI) using the BMI formula: BMI &lt;- weight/height^2 BMI # print the content of the BMI variable to the console ## [1] 19.59184 22.22222 20.93664 24.93075 31.37799 19.73630 Now we know that the first person has a BMI of 19.59, which is within the range of normality (18.5 and 24.9). 2.3 Selecting values from a vector We still see the BMI of all the other five people, i.e. the entire vector. How can we select only the first person? You can select values from a vector by using square brackets [ ] and enter the number of the entry that you want to print to your console. BMI[1] ## [1] 19.59184 Again, you can see that the first person has a BMI of 19.59. You could also decide to look at all values except the first one: BMI[-1] ## [1] 22.22222 20.93664 24.93075 31.37799 19.73630 You can even use the [ ] selector on vectors that consist of words instead of numbers. These vectors are called “character vectors”, while vectors that contain numbers are called “numeric vectors”. Let’s create a character vector that contains the BMIs of the six individuals as words. We’ll need to put quotation marks around your entries so that R knows that those values are words not numbers. BMI_word &lt;- c(&quot;nineteen&quot;, &quot;twenty-two&quot;, &quot;twenty&quot;, &quot;twenty-four&quot;, &quot;thirty-one&quot;, &quot;nineteen&quot;) BMI_word ## [1] &quot;nineteen&quot; &quot;twenty-two&quot; &quot;twenty&quot; &quot;twenty-four&quot; &quot;thirty-one&quot; ## [6] &quot;nineteen&quot; We’ll now select only the first value of of this BMI_word character vector: BMI_word[1] ## [1] &quot;nineteen&quot; If you want to select multiple values, you can index them. Let’s select the BMI of the third, fourth and fifth individual: BMI_word[3:5] ## [1] &quot;twenty&quot; &quot;twenty-four&quot; &quot;thirty-one&quot; 2.4 Take-Aways Mathematical operators: use +, -, *, /, ^ Use case: use these operators on numbers, variables, and vectors Create vectors: use the combine function c() Select values from vectors: use square brackets [ ] 2.5 Additional tutorials You still have questions? The following online guides can help you with that: Using R as a Calculator R Vector Now it’s your time to get into coding: Try Exercise 1. "],["exercise-1.html", "Exercise 1 Task 1 Task 2 Task 3", " Exercise 1 After working through Exercise 1, you’ll… have assessed how well you know R and RStudio know what chapters and concepts you might want to repeat again have managed to apply the basic concepts of R to data Task 1 Below you will see multiple choice questions. Please try to identify the correct answers. 1, 2, 3 and 4 correct answers are possible for each question. 1. What panels are part of RStudio? source console input packages, files &amp; plots 2. How do you activate R packages after you have installed them? import.packages() install.packages() package() library() 3. How do you create a vector in R with elements 1, 2, 3? cbind(1,2,3) cb(1,2,3) c(1,2,3) cmb(1,2,3) 4. Imagine you have a vector called ‘vector’ with 10 numeric elements. How do you retrieve the 8th element? vector[-2] vector[„-2”] vector[8] vector[„8”] 5. Imagine you have a vector called ‘hair’ with 5 elements: brown, black, red, blond, other. How do you retrieve the color ‘blond’? hair[4] hair[„4”] hair[blond] hair[„blond”] Task 2 Create a numeric vector with 8 values and assign the name age to the vector. First, display all elements of the vector. Then print only the 5th element. After that, display all elements except the 5th. Finally, display the elements at the positions 6 to 8. Task 3 Create a non-numeric, i.e. character, vector with 4 elements and assign the name eye_color to the vector. First, print all elements of this vector to the console. Then have only the value in the 2nd element displayed, then all values except the 2nd element. At the end, display the elements at the positions 2 to 4. When you’re ready to look at the solutions, you can find them here:Solutions for Exercise 1. "],["tutorial-working-with-data-files.html", " 3 Tutorial: Working with data (files) 3.1 Defining your working directory 3.2 Import data from your working directory 3.3 Subsetting variables / columns in data frames 3.4 Subsetting observations / rows in data frames 3.5 Subsetting values / cells in data frames 3.6 Subsetting data with conditions 3.7 Import data from various file formats 3.8 Take-Aways 3.9 Additional tutorials", " 3 Tutorial: Working with data (files) After working through Tutorial 3, you’ll… understand how to import data know how to select variables in data frames know how to access values in data frames 3.1 Defining your working directory In most cases, you don’t want to manually enter all your values into R and combine them with the c() function. Instead, you’ll likely want to import data files that you already have on your personal computer or drive. You’ve already learned how to import data using the R context menu, but there is a more efficient and reproducible way to do this. Therefore, the first step to importing your data into R is usually to define your working directory. Your working directory is the folder from which data can be imported into R or to which you can export and save data created with R. Create a folder that you want to use as your working directory for this tutorial (or use an existing one). For this example, I’ll create a folder called “IPR” (short for In Public Repository, since this is a public tutorial). Go to that folder and copy the folder path to it: Image: Working Directory on Windows Image: Copy Working Directory on Windows On Mac, you go to a document in your folder and right click on it. An options menu opens and you can copy the folder path: Image: Copy Working Directory on MAC Now you know where this working directory is located - but R should know too! Telling R from which folder to import data or where to export data is called setting your working directory. We use a function called setwd() (you guessed it right: short for “set working directory”) which allows us to do exactly that. Important: The way this working directory is set differs between Windows- and Mac-Operating Systems. Windows: The dashes need to be pointing towards the right direction (if you simply copy the path to the folder, you may need to replace these signs “\\” with “/”) setwd(&quot;C:/Users/LaraK/Documents/IPR&quot;) Mac: You may need to add a “/” at the beginning like so: setwd(&quot;/Users/LaraK/Documents/IPR&quot;) NOTE: Setting your entire desktop as the working directory rarely works. It’s better to create a new folder on your desktop and set that folder as your working directory. If you have forgotten where you set your current working directory, you can also ask R about the path of your current working directory with getwd(): getwd() ## [1] &quot;C:/Users/LaraK/Documents/IPR&quot; 3.1.1 Optional: Setting the working directory on a remote desktop The LMU Munich provides you with remote desktop access to the PCs in the local CIP-Pools. If you want to use your remote desktop to run R &amp; RStudio, you can follow this link to log into the remote desktop. This is a great fix if – for whatever reason – you can’t get R(Studio) installed on your machine and need a quick solution! Once you have logged in to the remote desktop, you can open RStudio and set the working directory (and import data) just like it is described in this tutorial (see next image). Image: Working Directory (&amp; Data Import) on a Remote Desktop The drawback: Since Windows does not allow RStudio to save script files without permission, you can’t save script files on the remote desktop. You can solve this with a workaround: Paste your script into a text file before closing RStudio. E.g., WordPad is pre-installed. Save this file as .R. When you want to load your script in RStudio, right click on the .R file and choose “open with RStudio”. Image: Saving a Script File on a Remote Desktop 3.2 Import data from your working directory After setting the working directory, you need to transfer the data file that you want to work with to that folder (here: the “IPR” folder). To do this, download the “WoJ.csv” file from LRZ Sync &amp; Share using this link. The dataset is a subset of the Worlds of Journalism 2012-16 study containing survey data from 1,200 journalists from five European countries. Put the downloaded data file in the folder that you just set up as your working directory (here: the “IPR” folder). The data file WoJ.csv is structured as follows: Each row contains the survey answers of a single journalist. Each column contains the values given by all journalists for a single variable. The variables included here are: country: the home country of the journalist (e.g. Germany, Switzerland) reach: the reach of the outlet that the journalist is working for (Transnational, National, Regional, Local) employment: the journalist’s current employment status (Full-time, Part-time, Freelancer) temp_contract: the journalist’s type of contract (Permenent, Temporary) autonomy_selection: how much autonomy the journalist indicates to have in his/her daily work (from 1 = none at all to 5 = very much) work_experience: in years trust_parliament &amp; trust_government: how much trust the journalist indicates to have (from 1 = none at all to 5 = very much) We will read in the file using read.csv(). We specify the file path in quotation marks to indicate where to find the data file. However, if you have already set your working directory to the folder where the file is located, you don’t need to specify the path. Additionally, we use the argument header = TRUE to let R know that the first row contains variable names. Finally, we assign the data file to a source object named survey (but you could choose a different name for your source object like WoJ or data). The data is now stored in this object. survey &lt;- read.csv(&quot;WoJ.csv&quot;, header = TRUE) survey[1:20,] ## country reach employment temp_contract autonomy_selection ## 1 Germany National Full-time Permanent 5 ## 2 Germany National Full-time Permanent 3 ## 3 Switzerland Regional Full-time Permanent 4 ## 4 Switzerland Local Part-time Permanent 4 ## 5 Austria National Part-time Permanent 4 ## 6 Switzerland Local Freelancer &lt;NA&gt; 4 ## 7 Germany Local Full-time Permanent 4 ## 8 Denmark National Full-time Permanent 3 ## 9 Switzerland Local Full-time Permanent 5 ## 10 Denmark National Full-time Permanent 2 ## 11 Austria Local Full-time Permanent 5 ## 12 Denmark National Freelancer &lt;NA&gt; 4 ## 13 UK Regional Full-time Permanent 3 ## 14 UK Transnational Full-time Permanent 4 ## 15 Austria National Full-time Permanent 3 ## 16 Denmark National Freelancer &lt;NA&gt; 5 ## 17 UK Transnational Full-time Permanent 4 ## 18 Switzerland Regional Full-time Permanent 4 ## 19 Switzerland National Part-time Permanent 4 ## 20 Denmark National Full-time Permanent 4 ## work_experience trust_parliament trust_government ## 1 10 3 3 ## 2 7 4 4 ## 3 6 4 4 ## 4 7 4 4 ## 5 15 3 2 ## 6 27 4 4 ## 7 24 2 1 ## 8 11 4 3 ## 9 25 1 1 ## 10 4 3 3 ## 11 8 3 2 ## 12 25 3 3 ## 13 10 3 2 ## 14 5 3 2 ## 15 23 3 2 ## 16 25 4 2 ## 17 11 2 3 ## 18 8 3 3 ## 19 32 3 4 ## 20 21 3 3 NOTE: While read.csv() reads in comma-separated values, read.csv2() reads in values that are separated by semicolons. To make the dataset a little more tangible, we will give the journalists 40 different fictitious names and repeat them 30 times over our 1200 journalists. The names will be saved into a new column in the dataset, which we will call name. Please run this code to add names to your data: survey$name &lt;- rep(c(&quot;Rosalie&quot;, &quot;Laurens&quot;, &quot;Florian&quot;, &quot;Chantal&quot;, &quot;Cynthia&quot;, &quot;Paul&quot;, &quot;Jonas&quot;, &quot;Tanja&quot;, &quot;David&quot;, &quot;Ferdinand&quot;, &quot;Caroline&quot;, &quot;Charline&quot;, &quot;Sev&quot;, &quot;Theodor&quot;, &quot;Helke&quot;, &quot;Joshua&quot;, &quot;Jona&quot;, &quot;Konrad&quot;, &quot;Lennart&quot;, &quot;Luise&quot;, &quot;Wiebke&quot;, &quot;Marie&quot;, &quot;Rosa&quot;, &quot;Alma&quot;, &quot;Ida&quot;, &quot;Jean&quot;, &quot;Leonie&quot;, &quot;Tom&quot;, &quot;Maximilian&quot;, &quot;Viktor&quot;, &quot;Marianne&quot;, &quot;Velma&quot;, &quot;Carl&quot;, &quot;Wolf&quot;, &quot;Merten&quot;, &quot;Tong-Tong&quot;, &quot;Sal&quot;, &quot;Joe&quot;, &quot;Alex&quot;, &quot;Robin&quot;), 30) 3.3 Subsetting variables / columns in data frames In the Tutorial: Using R as a calculator, your variables were “floating” in your workspace or environment. They were not stored in a container, so you could call them by simply writing their name in the console. When you import data files into R, all variables in that dataset are stored in a “container,” which is your source object. These containers for variables are called data frames in R. Variables that are part of a data frame can be accessed by their name, but we need to specify the data frame AND the variable name and combine them with the access operator: $. This takes the form of: dataframe$variablename # the first part is the container name, i.e. data frame # this is followed by the access operator $ # finally, you call the variable by name For instance, we could retrieve the variable / column “name” in our survey data frame by simply using its variable name: We specify the object we want to access, the data frame survey and then retrieve the column name via the operator $: survey$name ## [1] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [6] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [11] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [16] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [21] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [26] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [31] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [36] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [41] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [46] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [51] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [56] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [61] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [66] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [71] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [76] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [81] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [86] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [91] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [96] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [101] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [106] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [111] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [116] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [121] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [126] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [131] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [136] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [141] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [146] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [151] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [156] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [161] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [166] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [171] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [176] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [181] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [186] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [191] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [196] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [201] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [206] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [211] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [216] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [221] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [226] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [231] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [236] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [241] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [246] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [251] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [256] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [261] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [266] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [271] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [276] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [281] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [286] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [291] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [296] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [301] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [306] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [311] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [316] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [321] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [326] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [331] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [336] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [341] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [346] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [351] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [356] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [361] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [366] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [371] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [376] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [381] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [386] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [391] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [396] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [401] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [406] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [411] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [416] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [421] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [426] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [431] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [436] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [441] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [446] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [451] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [456] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [461] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [466] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [471] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [476] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [481] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [486] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [491] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [496] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [501] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [506] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [511] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [516] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [521] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [526] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [531] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [536] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [541] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [546] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [551] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [556] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [561] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [566] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [571] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [576] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [581] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [586] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [591] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [596] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [601] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [606] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [611] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [616] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [621] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [626] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [631] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [636] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [641] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [646] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [651] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [656] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [661] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [666] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [671] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [676] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [681] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [686] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [691] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [696] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [701] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [706] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [711] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [716] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [721] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [726] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [731] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [736] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [741] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [746] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [751] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [756] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [761] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [766] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [771] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [776] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [781] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [786] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [791] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [796] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [801] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [806] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [811] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [816] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [821] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [826] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [831] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [836] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [841] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [846] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [851] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [856] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [861] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [866] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [871] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [876] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [881] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [886] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [891] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [896] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [901] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [906] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [911] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [916] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [921] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [926] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [931] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [936] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [941] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [946] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [951] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [956] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [961] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [966] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [971] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [976] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [981] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [986] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [991] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [996] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1001] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1006] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1011] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1016] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1021] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1026] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1031] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1036] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1041] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1046] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1051] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1056] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1061] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1066] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1071] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1076] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1081] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1086] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1091] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1096] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1101] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1106] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1111] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1116] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1121] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1126] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1131] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1136] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1141] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1146] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1151] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1156] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1161] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1166] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1171] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1176] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1181] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1186] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1191] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1196] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; You know that the name variable is the ninth column of you data frame. Therefore, you can also access this column / variable by calling it by its index number (column index, here: 9). Just like you’ve learned in the Tutorial: Using R as a calculator, you can access sub-elements of a greater object with square brackets [ ]: survey[9] ## name ## 1 Rosalie ## 2 Laurens ## 3 Florian ## 4 Chantal ## 5 Cynthia ## 6 Paul ## 7 Jonas ## 8 Tanja ## 9 David ## 10 Ferdinand ## 11 Caroline ## 12 Charline ## 13 Sev ## 14 Theodor ## 15 Helke ## 16 Joshua ## 17 Jona ## 18 Konrad ## 19 Lennart ## 20 Luise ## 21 Wiebke ## 22 Marie ## 23 Rosa ## 24 Alma ## 25 Ida ## 26 Jean ## 27 Leonie ## 28 Tom ## 29 Maximilian ## 30 Viktor ## 31 Marianne ## 32 Velma ## 33 Carl ## 34 Wolf ## 35 Merten ## 36 Tong-Tong ## 37 Sal ## 38 Joe ## 39 Alex ## 40 Robin ## 41 Rosalie ## 42 Laurens ## 43 Florian ## 44 Chantal ## 45 Cynthia ## 46 Paul ## 47 Jonas ## 48 Tanja ## 49 David ## 50 Ferdinand ## 51 Caroline ## 52 Charline ## 53 Sev ## 54 Theodor ## 55 Helke ## 56 Joshua ## 57 Jona ## 58 Konrad ## 59 Lennart ## 60 Luise ## 61 Wiebke ## 62 Marie ## 63 Rosa ## 64 Alma ## 65 Ida ## 66 Jean ## 67 Leonie ## 68 Tom ## 69 Maximilian ## 70 Viktor ## 71 Marianne ## 72 Velma ## 73 Carl ## 74 Wolf ## 75 Merten ## 76 Tong-Tong ## 77 Sal ## 78 Joe ## 79 Alex ## 80 Robin ## 81 Rosalie ## 82 Laurens ## 83 Florian ## 84 Chantal ## 85 Cynthia ## 86 Paul ## 87 Jonas ## 88 Tanja ## 89 David ## 90 Ferdinand ## 91 Caroline ## 92 Charline ## 93 Sev ## 94 Theodor ## 95 Helke ## 96 Joshua ## 97 Jona ## 98 Konrad ## 99 Lennart ## 100 Luise ## 101 Wiebke ## 102 Marie ## 103 Rosa ## 104 Alma ## 105 Ida ## 106 Jean ## 107 Leonie ## 108 Tom ## 109 Maximilian ## 110 Viktor ## 111 Marianne ## 112 Velma ## 113 Carl ## 114 Wolf ## 115 Merten ## 116 Tong-Tong ## 117 Sal ## 118 Joe ## 119 Alex ## 120 Robin ## 121 Rosalie ## 122 Laurens ## 123 Florian ## 124 Chantal ## 125 Cynthia ## 126 Paul ## 127 Jonas ## 128 Tanja ## 129 David ## 130 Ferdinand ## 131 Caroline ## 132 Charline ## 133 Sev ## 134 Theodor ## 135 Helke ## 136 Joshua ## 137 Jona ## 138 Konrad ## 139 Lennart ## 140 Luise ## 141 Wiebke ## 142 Marie ## 143 Rosa ## 144 Alma ## 145 Ida ## 146 Jean ## 147 Leonie ## 148 Tom ## 149 Maximilian ## 150 Viktor ## 151 Marianne ## 152 Velma ## 153 Carl ## 154 Wolf ## 155 Merten ## 156 Tong-Tong ## 157 Sal ## 158 Joe ## 159 Alex ## 160 Robin ## 161 Rosalie ## 162 Laurens ## 163 Florian ## 164 Chantal ## 165 Cynthia ## 166 Paul ## 167 Jonas ## 168 Tanja ## 169 David ## 170 Ferdinand ## 171 Caroline ## 172 Charline ## 173 Sev ## 174 Theodor ## 175 Helke ## 176 Joshua ## 177 Jona ## 178 Konrad ## 179 Lennart ## 180 Luise ## 181 Wiebke ## 182 Marie ## 183 Rosa ## 184 Alma ## 185 Ida ## 186 Jean ## 187 Leonie ## 188 Tom ## 189 Maximilian ## 190 Viktor ## 191 Marianne ## 192 Velma ## 193 Carl ## 194 Wolf ## 195 Merten ## 196 Tong-Tong ## 197 Sal ## 198 Joe ## 199 Alex ## 200 Robin ## 201 Rosalie ## 202 Laurens ## 203 Florian ## 204 Chantal ## 205 Cynthia ## 206 Paul ## 207 Jonas ## 208 Tanja ## 209 David ## 210 Ferdinand ## 211 Caroline ## 212 Charline ## 213 Sev ## 214 Theodor ## 215 Helke ## 216 Joshua ## 217 Jona ## 218 Konrad ## 219 Lennart ## 220 Luise ## 221 Wiebke ## 222 Marie ## 223 Rosa ## 224 Alma ## 225 Ida ## 226 Jean ## 227 Leonie ## 228 Tom ## 229 Maximilian ## 230 Viktor ## 231 Marianne ## 232 Velma ## 233 Carl ## 234 Wolf ## 235 Merten ## 236 Tong-Tong ## 237 Sal ## 238 Joe ## 239 Alex ## 240 Robin ## 241 Rosalie ## 242 Laurens ## 243 Florian ## 244 Chantal ## 245 Cynthia ## 246 Paul ## 247 Jonas ## 248 Tanja ## 249 David ## 250 Ferdinand ## 251 Caroline ## 252 Charline ## 253 Sev ## 254 Theodor ## 255 Helke ## 256 Joshua ## 257 Jona ## 258 Konrad ## 259 Lennart ## 260 Luise ## 261 Wiebke ## 262 Marie ## 263 Rosa ## 264 Alma ## 265 Ida ## 266 Jean ## 267 Leonie ## 268 Tom ## 269 Maximilian ## 270 Viktor ## 271 Marianne ## 272 Velma ## 273 Carl ## 274 Wolf ## 275 Merten ## 276 Tong-Tong ## 277 Sal ## 278 Joe ## 279 Alex ## 280 Robin ## 281 Rosalie ## 282 Laurens ## 283 Florian ## 284 Chantal ## 285 Cynthia ## 286 Paul ## 287 Jonas ## 288 Tanja ## 289 David ## 290 Ferdinand ## 291 Caroline ## 292 Charline ## 293 Sev ## 294 Theodor ## 295 Helke ## 296 Joshua ## 297 Jona ## 298 Konrad ## 299 Lennart ## 300 Luise ## 301 Wiebke ## 302 Marie ## 303 Rosa ## 304 Alma ## 305 Ida ## 306 Jean ## 307 Leonie ## 308 Tom ## 309 Maximilian ## 310 Viktor ## 311 Marianne ## 312 Velma ## 313 Carl ## 314 Wolf ## 315 Merten ## 316 Tong-Tong ## 317 Sal ## 318 Joe ## 319 Alex ## 320 Robin ## 321 Rosalie ## 322 Laurens ## 323 Florian ## 324 Chantal ## 325 Cynthia ## 326 Paul ## 327 Jonas ## 328 Tanja ## 329 David ## 330 Ferdinand ## 331 Caroline ## 332 Charline ## 333 Sev ## 334 Theodor ## 335 Helke ## 336 Joshua ## 337 Jona ## 338 Konrad ## 339 Lennart ## 340 Luise ## 341 Wiebke ## 342 Marie ## 343 Rosa ## 344 Alma ## 345 Ida ## 346 Jean ## 347 Leonie ## 348 Tom ## 349 Maximilian ## 350 Viktor ## 351 Marianne ## 352 Velma ## 353 Carl ## 354 Wolf ## 355 Merten ## 356 Tong-Tong ## 357 Sal ## 358 Joe ## 359 Alex ## 360 Robin ## 361 Rosalie ## 362 Laurens ## 363 Florian ## 364 Chantal ## 365 Cynthia ## 366 Paul ## 367 Jonas ## 368 Tanja ## 369 David ## 370 Ferdinand ## 371 Caroline ## 372 Charline ## 373 Sev ## 374 Theodor ## 375 Helke ## 376 Joshua ## 377 Jona ## 378 Konrad ## 379 Lennart ## 380 Luise ## 381 Wiebke ## 382 Marie ## 383 Rosa ## 384 Alma ## 385 Ida ## 386 Jean ## 387 Leonie ## 388 Tom ## 389 Maximilian ## 390 Viktor ## 391 Marianne ## 392 Velma ## 393 Carl ## 394 Wolf ## 395 Merten ## 396 Tong-Tong ## 397 Sal ## 398 Joe ## 399 Alex ## 400 Robin ## 401 Rosalie ## 402 Laurens ## 403 Florian ## 404 Chantal ## 405 Cynthia ## 406 Paul ## 407 Jonas ## 408 Tanja ## 409 David ## 410 Ferdinand ## 411 Caroline ## 412 Charline ## 413 Sev ## 414 Theodor ## 415 Helke ## 416 Joshua ## 417 Jona ## 418 Konrad ## 419 Lennart ## 420 Luise ## 421 Wiebke ## 422 Marie ## 423 Rosa ## 424 Alma ## 425 Ida ## 426 Jean ## 427 Leonie ## 428 Tom ## 429 Maximilian ## 430 Viktor ## 431 Marianne ## 432 Velma ## 433 Carl ## 434 Wolf ## 435 Merten ## 436 Tong-Tong ## 437 Sal ## 438 Joe ## 439 Alex ## 440 Robin ## 441 Rosalie ## 442 Laurens ## 443 Florian ## 444 Chantal ## 445 Cynthia ## 446 Paul ## 447 Jonas ## 448 Tanja ## 449 David ## 450 Ferdinand ## 451 Caroline ## 452 Charline ## 453 Sev ## 454 Theodor ## 455 Helke ## 456 Joshua ## 457 Jona ## 458 Konrad ## 459 Lennart ## 460 Luise ## 461 Wiebke ## 462 Marie ## 463 Rosa ## 464 Alma ## 465 Ida ## 466 Jean ## 467 Leonie ## 468 Tom ## 469 Maximilian ## 470 Viktor ## 471 Marianne ## 472 Velma ## 473 Carl ## 474 Wolf ## 475 Merten ## 476 Tong-Tong ## 477 Sal ## 478 Joe ## 479 Alex ## 480 Robin ## 481 Rosalie ## 482 Laurens ## 483 Florian ## 484 Chantal ## 485 Cynthia ## 486 Paul ## 487 Jonas ## 488 Tanja ## 489 David ## 490 Ferdinand ## 491 Caroline ## 492 Charline ## 493 Sev ## 494 Theodor ## 495 Helke ## 496 Joshua ## 497 Jona ## 498 Konrad ## 499 Lennart ## 500 Luise ## 501 Wiebke ## 502 Marie ## 503 Rosa ## 504 Alma ## 505 Ida ## 506 Jean ## 507 Leonie ## 508 Tom ## 509 Maximilian ## 510 Viktor ## 511 Marianne ## 512 Velma ## 513 Carl ## 514 Wolf ## 515 Merten ## 516 Tong-Tong ## 517 Sal ## 518 Joe ## 519 Alex ## 520 Robin ## 521 Rosalie ## 522 Laurens ## 523 Florian ## 524 Chantal ## 525 Cynthia ## 526 Paul ## 527 Jonas ## 528 Tanja ## 529 David ## 530 Ferdinand ## 531 Caroline ## 532 Charline ## 533 Sev ## 534 Theodor ## 535 Helke ## 536 Joshua ## 537 Jona ## 538 Konrad ## 539 Lennart ## 540 Luise ## 541 Wiebke ## 542 Marie ## 543 Rosa ## 544 Alma ## 545 Ida ## 546 Jean ## 547 Leonie ## 548 Tom ## 549 Maximilian ## 550 Viktor ## 551 Marianne ## 552 Velma ## 553 Carl ## 554 Wolf ## 555 Merten ## 556 Tong-Tong ## 557 Sal ## 558 Joe ## 559 Alex ## 560 Robin ## 561 Rosalie ## 562 Laurens ## 563 Florian ## 564 Chantal ## 565 Cynthia ## 566 Paul ## 567 Jonas ## 568 Tanja ## 569 David ## 570 Ferdinand ## 571 Caroline ## 572 Charline ## 573 Sev ## 574 Theodor ## 575 Helke ## 576 Joshua ## 577 Jona ## 578 Konrad ## 579 Lennart ## 580 Luise ## 581 Wiebke ## 582 Marie ## 583 Rosa ## 584 Alma ## 585 Ida ## 586 Jean ## 587 Leonie ## 588 Tom ## 589 Maximilian ## 590 Viktor ## 591 Marianne ## 592 Velma ## 593 Carl ## 594 Wolf ## 595 Merten ## 596 Tong-Tong ## 597 Sal ## 598 Joe ## 599 Alex ## 600 Robin ## 601 Rosalie ## 602 Laurens ## 603 Florian ## 604 Chantal ## 605 Cynthia ## 606 Paul ## 607 Jonas ## 608 Tanja ## 609 David ## 610 Ferdinand ## 611 Caroline ## 612 Charline ## 613 Sev ## 614 Theodor ## 615 Helke ## 616 Joshua ## 617 Jona ## 618 Konrad ## 619 Lennart ## 620 Luise ## 621 Wiebke ## 622 Marie ## 623 Rosa ## 624 Alma ## 625 Ida ## 626 Jean ## 627 Leonie ## 628 Tom ## 629 Maximilian ## 630 Viktor ## 631 Marianne ## 632 Velma ## 633 Carl ## 634 Wolf ## 635 Merten ## 636 Tong-Tong ## 637 Sal ## 638 Joe ## 639 Alex ## 640 Robin ## 641 Rosalie ## 642 Laurens ## 643 Florian ## 644 Chantal ## 645 Cynthia ## 646 Paul ## 647 Jonas ## 648 Tanja ## 649 David ## 650 Ferdinand ## 651 Caroline ## 652 Charline ## 653 Sev ## 654 Theodor ## 655 Helke ## 656 Joshua ## 657 Jona ## 658 Konrad ## 659 Lennart ## 660 Luise ## 661 Wiebke ## 662 Marie ## 663 Rosa ## 664 Alma ## 665 Ida ## 666 Jean ## 667 Leonie ## 668 Tom ## 669 Maximilian ## 670 Viktor ## 671 Marianne ## 672 Velma ## 673 Carl ## 674 Wolf ## 675 Merten ## 676 Tong-Tong ## 677 Sal ## 678 Joe ## 679 Alex ## 680 Robin ## 681 Rosalie ## 682 Laurens ## 683 Florian ## 684 Chantal ## 685 Cynthia ## 686 Paul ## 687 Jonas ## 688 Tanja ## 689 David ## 690 Ferdinand ## 691 Caroline ## 692 Charline ## 693 Sev ## 694 Theodor ## 695 Helke ## 696 Joshua ## 697 Jona ## 698 Konrad ## 699 Lennart ## 700 Luise ## 701 Wiebke ## 702 Marie ## 703 Rosa ## 704 Alma ## 705 Ida ## 706 Jean ## 707 Leonie ## 708 Tom ## 709 Maximilian ## 710 Viktor ## 711 Marianne ## 712 Velma ## 713 Carl ## 714 Wolf ## 715 Merten ## 716 Tong-Tong ## 717 Sal ## 718 Joe ## 719 Alex ## 720 Robin ## 721 Rosalie ## 722 Laurens ## 723 Florian ## 724 Chantal ## 725 Cynthia ## 726 Paul ## 727 Jonas ## 728 Tanja ## 729 David ## 730 Ferdinand ## 731 Caroline ## 732 Charline ## 733 Sev ## 734 Theodor ## 735 Helke ## 736 Joshua ## 737 Jona ## 738 Konrad ## 739 Lennart ## 740 Luise ## 741 Wiebke ## 742 Marie ## 743 Rosa ## 744 Alma ## 745 Ida ## 746 Jean ## 747 Leonie ## 748 Tom ## 749 Maximilian ## 750 Viktor ## 751 Marianne ## 752 Velma ## 753 Carl ## 754 Wolf ## 755 Merten ## 756 Tong-Tong ## 757 Sal ## 758 Joe ## 759 Alex ## 760 Robin ## 761 Rosalie ## 762 Laurens ## 763 Florian ## 764 Chantal ## 765 Cynthia ## 766 Paul ## 767 Jonas ## 768 Tanja ## 769 David ## 770 Ferdinand ## 771 Caroline ## 772 Charline ## 773 Sev ## 774 Theodor ## 775 Helke ## 776 Joshua ## 777 Jona ## 778 Konrad ## 779 Lennart ## 780 Luise ## 781 Wiebke ## 782 Marie ## 783 Rosa ## 784 Alma ## 785 Ida ## 786 Jean ## 787 Leonie ## 788 Tom ## 789 Maximilian ## 790 Viktor ## 791 Marianne ## 792 Velma ## 793 Carl ## 794 Wolf ## 795 Merten ## 796 Tong-Tong ## 797 Sal ## 798 Joe ## 799 Alex ## 800 Robin ## 801 Rosalie ## 802 Laurens ## 803 Florian ## 804 Chantal ## 805 Cynthia ## 806 Paul ## 807 Jonas ## 808 Tanja ## 809 David ## 810 Ferdinand ## 811 Caroline ## 812 Charline ## 813 Sev ## 814 Theodor ## 815 Helke ## 816 Joshua ## 817 Jona ## 818 Konrad ## 819 Lennart ## 820 Luise ## 821 Wiebke ## 822 Marie ## 823 Rosa ## 824 Alma ## 825 Ida ## 826 Jean ## 827 Leonie ## 828 Tom ## 829 Maximilian ## 830 Viktor ## 831 Marianne ## 832 Velma ## 833 Carl ## 834 Wolf ## 835 Merten ## 836 Tong-Tong ## 837 Sal ## 838 Joe ## 839 Alex ## 840 Robin ## 841 Rosalie ## 842 Laurens ## 843 Florian ## 844 Chantal ## 845 Cynthia ## 846 Paul ## 847 Jonas ## 848 Tanja ## 849 David ## 850 Ferdinand ## 851 Caroline ## 852 Charline ## 853 Sev ## 854 Theodor ## 855 Helke ## 856 Joshua ## 857 Jona ## 858 Konrad ## 859 Lennart ## 860 Luise ## 861 Wiebke ## 862 Marie ## 863 Rosa ## 864 Alma ## 865 Ida ## 866 Jean ## 867 Leonie ## 868 Tom ## 869 Maximilian ## 870 Viktor ## 871 Marianne ## 872 Velma ## 873 Carl ## 874 Wolf ## 875 Merten ## 876 Tong-Tong ## 877 Sal ## 878 Joe ## 879 Alex ## 880 Robin ## 881 Rosalie ## 882 Laurens ## 883 Florian ## 884 Chantal ## 885 Cynthia ## 886 Paul ## 887 Jonas ## 888 Tanja ## 889 David ## 890 Ferdinand ## 891 Caroline ## 892 Charline ## 893 Sev ## 894 Theodor ## 895 Helke ## 896 Joshua ## 897 Jona ## 898 Konrad ## 899 Lennart ## 900 Luise ## 901 Wiebke ## 902 Marie ## 903 Rosa ## 904 Alma ## 905 Ida ## 906 Jean ## 907 Leonie ## 908 Tom ## 909 Maximilian ## 910 Viktor ## 911 Marianne ## 912 Velma ## 913 Carl ## 914 Wolf ## 915 Merten ## 916 Tong-Tong ## 917 Sal ## 918 Joe ## 919 Alex ## 920 Robin ## 921 Rosalie ## 922 Laurens ## 923 Florian ## 924 Chantal ## 925 Cynthia ## 926 Paul ## 927 Jonas ## 928 Tanja ## 929 David ## 930 Ferdinand ## 931 Caroline ## 932 Charline ## 933 Sev ## 934 Theodor ## 935 Helke ## 936 Joshua ## 937 Jona ## 938 Konrad ## 939 Lennart ## 940 Luise ## 941 Wiebke ## 942 Marie ## 943 Rosa ## 944 Alma ## 945 Ida ## 946 Jean ## 947 Leonie ## 948 Tom ## 949 Maximilian ## 950 Viktor ## 951 Marianne ## 952 Velma ## 953 Carl ## 954 Wolf ## 955 Merten ## 956 Tong-Tong ## 957 Sal ## 958 Joe ## 959 Alex ## 960 Robin ## 961 Rosalie ## 962 Laurens ## 963 Florian ## 964 Chantal ## 965 Cynthia ## 966 Paul ## 967 Jonas ## 968 Tanja ## 969 David ## 970 Ferdinand ## 971 Caroline ## 972 Charline ## 973 Sev ## 974 Theodor ## 975 Helke ## 976 Joshua ## 977 Jona ## 978 Konrad ## 979 Lennart ## 980 Luise ## 981 Wiebke ## 982 Marie ## 983 Rosa ## 984 Alma ## 985 Ida ## 986 Jean ## 987 Leonie ## 988 Tom ## 989 Maximilian ## 990 Viktor ## 991 Marianne ## 992 Velma ## 993 Carl ## 994 Wolf ## 995 Merten ## 996 Tong-Tong ## 997 Sal ## 998 Joe ## 999 Alex ## 1000 Robin ## 1001 Rosalie ## 1002 Laurens ## 1003 Florian ## 1004 Chantal ## 1005 Cynthia ## 1006 Paul ## 1007 Jonas ## 1008 Tanja ## 1009 David ## 1010 Ferdinand ## 1011 Caroline ## 1012 Charline ## 1013 Sev ## 1014 Theodor ## 1015 Helke ## 1016 Joshua ## 1017 Jona ## 1018 Konrad ## 1019 Lennart ## 1020 Luise ## 1021 Wiebke ## 1022 Marie ## 1023 Rosa ## 1024 Alma ## 1025 Ida ## 1026 Jean ## 1027 Leonie ## 1028 Tom ## 1029 Maximilian ## 1030 Viktor ## 1031 Marianne ## 1032 Velma ## 1033 Carl ## 1034 Wolf ## 1035 Merten ## 1036 Tong-Tong ## 1037 Sal ## 1038 Joe ## 1039 Alex ## 1040 Robin ## 1041 Rosalie ## 1042 Laurens ## 1043 Florian ## 1044 Chantal ## 1045 Cynthia ## 1046 Paul ## 1047 Jonas ## 1048 Tanja ## 1049 David ## 1050 Ferdinand ## 1051 Caroline ## 1052 Charline ## 1053 Sev ## 1054 Theodor ## 1055 Helke ## 1056 Joshua ## 1057 Jona ## 1058 Konrad ## 1059 Lennart ## 1060 Luise ## 1061 Wiebke ## 1062 Marie ## 1063 Rosa ## 1064 Alma ## 1065 Ida ## 1066 Jean ## 1067 Leonie ## 1068 Tom ## 1069 Maximilian ## 1070 Viktor ## 1071 Marianne ## 1072 Velma ## 1073 Carl ## 1074 Wolf ## 1075 Merten ## 1076 Tong-Tong ## 1077 Sal ## 1078 Joe ## 1079 Alex ## 1080 Robin ## 1081 Rosalie ## 1082 Laurens ## 1083 Florian ## 1084 Chantal ## 1085 Cynthia ## 1086 Paul ## 1087 Jonas ## 1088 Tanja ## 1089 David ## 1090 Ferdinand ## 1091 Caroline ## 1092 Charline ## 1093 Sev ## 1094 Theodor ## 1095 Helke ## 1096 Joshua ## 1097 Jona ## 1098 Konrad ## 1099 Lennart ## 1100 Luise ## 1101 Wiebke ## 1102 Marie ## 1103 Rosa ## 1104 Alma ## 1105 Ida ## 1106 Jean ## 1107 Leonie ## 1108 Tom ## 1109 Maximilian ## 1110 Viktor ## 1111 Marianne ## 1112 Velma ## 1113 Carl ## 1114 Wolf ## 1115 Merten ## 1116 Tong-Tong ## 1117 Sal ## 1118 Joe ## 1119 Alex ## 1120 Robin ## 1121 Rosalie ## 1122 Laurens ## 1123 Florian ## 1124 Chantal ## 1125 Cynthia ## 1126 Paul ## 1127 Jonas ## 1128 Tanja ## 1129 David ## 1130 Ferdinand ## 1131 Caroline ## 1132 Charline ## 1133 Sev ## 1134 Theodor ## 1135 Helke ## 1136 Joshua ## 1137 Jona ## 1138 Konrad ## 1139 Lennart ## 1140 Luise ## 1141 Wiebke ## 1142 Marie ## 1143 Rosa ## 1144 Alma ## 1145 Ida ## 1146 Jean ## 1147 Leonie ## 1148 Tom ## 1149 Maximilian ## 1150 Viktor ## 1151 Marianne ## 1152 Velma ## 1153 Carl ## 1154 Wolf ## 1155 Merten ## 1156 Tong-Tong ## 1157 Sal ## 1158 Joe ## 1159 Alex ## 1160 Robin ## 1161 Rosalie ## 1162 Laurens ## 1163 Florian ## 1164 Chantal ## 1165 Cynthia ## 1166 Paul ## 1167 Jonas ## 1168 Tanja ## 1169 David ## 1170 Ferdinand ## 1171 Caroline ## 1172 Charline ## 1173 Sev ## 1174 Theodor ## 1175 Helke ## 1176 Joshua ## 1177 Jona ## 1178 Konrad ## 1179 Lennart ## 1180 Luise ## 1181 Wiebke ## 1182 Marie ## 1183 Rosa ## 1184 Alma ## 1185 Ida ## 1186 Jean ## 1187 Leonie ## 1188 Tom ## 1189 Maximilian ## 1190 Viktor ## 1191 Marianne ## 1192 Velma ## 1193 Carl ## 1194 Wolf ## 1195 Merten ## 1196 Tong-Tong ## 1197 Sal ## 1198 Joe ## 1199 Alex ## 1200 Robin Note: While the first command gives you the names as a vector, the second one gives you the names as a data frame object with only one column. This keeps the column header “name” intact. However, if you want to retrieve a vector using the column index, you need to provide two indices: one for the row that you want to select, followed by a comma, and one for the column. Since we want to select all rows, but only column No. 9, we need leave the row No. blank: survey[,9] # column index = 9 ## [1] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [6] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [11] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [16] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [21] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [26] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [31] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [36] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [41] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [46] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [51] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [56] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [61] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [66] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [71] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [76] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [81] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [86] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [91] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [96] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [101] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [106] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [111] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [116] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [121] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [126] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [131] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [136] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [141] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [146] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [151] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [156] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [161] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [166] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [171] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [176] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [181] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [186] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [191] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [196] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [201] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [206] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [211] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [216] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [221] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [226] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [231] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [236] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [241] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [246] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [251] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [256] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [261] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [266] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [271] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [276] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [281] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [286] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [291] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [296] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [301] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [306] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [311] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [316] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [321] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [326] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [331] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [336] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [341] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [346] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [351] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [356] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [361] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [366] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [371] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [376] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [381] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [386] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [391] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [396] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [401] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [406] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [411] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [416] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [421] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [426] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [431] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [436] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [441] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [446] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [451] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [456] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [461] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [466] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [471] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [476] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [481] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [486] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [491] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [496] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [501] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [506] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [511] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [516] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [521] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [526] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [531] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [536] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [541] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [546] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [551] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [556] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [561] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [566] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [571] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [576] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [581] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [586] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [591] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [596] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [601] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [606] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [611] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [616] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [621] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [626] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [631] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [636] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [641] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [646] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [651] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [656] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [661] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [666] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [671] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [676] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [681] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [686] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [691] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [696] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [701] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [706] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [711] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [716] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [721] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [726] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [731] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [736] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [741] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [746] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [751] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [756] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [761] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [766] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [771] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [776] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [781] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [786] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [791] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [796] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [801] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [806] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [811] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [816] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [821] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [826] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [831] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [836] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [841] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [846] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [851] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [856] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [861] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [866] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [871] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [876] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [881] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [886] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [891] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [896] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [901] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [906] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [911] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [916] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [921] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [926] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [931] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [936] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [941] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [946] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [951] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [956] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [961] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [966] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [971] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [976] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [981] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [986] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [991] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [996] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1001] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1006] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1011] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1016] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1021] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1026] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1031] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1036] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1041] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1046] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1051] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1056] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1061] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1066] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1071] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1076] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1081] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1086] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1091] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1096] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1101] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1106] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1111] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1116] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1121] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1126] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1131] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1136] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1141] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1146] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1151] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1156] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; ## [1161] &quot;Rosalie&quot; &quot;Laurens&quot; &quot;Florian&quot; &quot;Chantal&quot; &quot;Cynthia&quot; ## [1166] &quot;Paul&quot; &quot;Jonas&quot; &quot;Tanja&quot; &quot;David&quot; &quot;Ferdinand&quot; ## [1171] &quot;Caroline&quot; &quot;Charline&quot; &quot;Sev&quot; &quot;Theodor&quot; &quot;Helke&quot; ## [1176] &quot;Joshua&quot; &quot;Jona&quot; &quot;Konrad&quot; &quot;Lennart&quot; &quot;Luise&quot; ## [1181] &quot;Wiebke&quot; &quot;Marie&quot; &quot;Rosa&quot; &quot;Alma&quot; &quot;Ida&quot; ## [1186] &quot;Jean&quot; &quot;Leonie&quot; &quot;Tom&quot; &quot;Maximilian&quot; &quot;Viktor&quot; ## [1191] &quot;Marianne&quot; &quot;Velma&quot; &quot;Carl&quot; &quot;Wolf&quot; &quot;Merten&quot; ## [1196] &quot;Tong-Tong&quot; &quot;Sal&quot; &quot;Joe&quot; &quot;Alex&quot; &quot;Robin&quot; 3.4 Subsetting observations / rows in data frames Using the same indexing technique, you can also select an entire row (i.e., journalist) by providing a row index and leaving the column index blank: survey[1,] # row index = 1 ## country reach employment temp_contract autonomy_selection work_experience ## 1 Germany National Full-time Permanent 5 10 ## trust_parliament trust_government name ## 1 3 3 Rosalie 3.5 Subsetting values / cells in data frames To subset values of a data set, you can call a variable / column by its name. You just have to specify the data frame, the variable name, AND the row index. For example, to look only at the first name entry in the data, which is Rosalie, you can use the following code: survey$name[1] ## [1] &quot;Rosalie&quot; Now, can you guess how to access the exact same value using the column index instead of the column name? You can enter the row index first, followed by a comma, and then finish with the column index, like this: survey[1,9] # row index = 1, column index = 9 ## [1] &quot;Rosalie&quot; Of course, you can use complex indexing on data frames. Let’s look at the first ten rows of the eighth (trust_government) and ninth (name) column: survey[1:10,8:9] ## trust_government name ## 1 3 Rosalie ## 2 4 Laurens ## 3 4 Florian ## 4 4 Chantal ## 5 2 Cynthia ## 6 4 Paul ## 7 1 Jonas ## 8 3 Tanja ## 9 1 David ## 10 3 Ferdinand Or select the second ten rows of the sixth (work_experience) and ninth (name) column: survey[10:20,c(6,9)] ## work_experience name ## 10 4 Ferdinand ## 11 8 Caroline ## 12 25 Charline ## 13 10 Sev ## 14 5 Theodor ## 15 23 Helke ## 16 25 Joshua ## 17 11 Jona ## 18 8 Konrad ## 19 32 Lennart ## 20 21 Luise 3.6 Subsetting data with conditions Let’s say we want to select all names of journalists who have a work experience of more than 40 years. This time, we’ll need to use a condition to select our rows: survey[survey$work_experience &gt; 40,9] ## [1] &quot;David&quot; &quot;Paul&quot; &quot;Caroline&quot; &quot;Lennart&quot; &quot;Paul&quot; &quot;Jonas&quot; ## [7] &quot;Chantal&quot; &quot;Sev&quot; &quot;Florian&quot; &quot;Wiebke&quot; &quot;Velma&quot; &quot;Charline&quot; ## [13] &quot;Wolf&quot; &quot;Ida&quot; &quot;Charline&quot; &quot;Alex&quot; &quot;Sev&quot; &quot;Jona&quot; ## [19] &quot;Joe&quot; &quot;Sal&quot; &quot;Alex&quot; &quot;Carl&quot; &quot;Cynthia&quot; # Read: I want to select column 9 (name) from the survey data frame # and display all rows in which the work experience column of the survey data frame has a value &gt; 40 Alternatively, if you want to show all columns that belong to journalists who have a work experience of more than 40 years, you would do it like that: survey[survey$work_experience &gt; 40,] ## country reach employment temp_contract autonomy_selection ## 49 Denmark Regional Freelancer &lt;NA&gt; 4 ## 126 Austria National Part-time Permanent 4 ## 131 UK Transnational Part-time Permanent 5 ## 259 Denmark Regional Full-time Permanent 4 ## 286 Denmark National Full-time Permanent 3 ## 287 Denmark National Freelancer &lt;NA&gt; 3 ## 324 UK National Full-time Permanent 5 ## 333 Denmark National Freelancer &lt;NA&gt; 4 ## 443 Austria National Part-time Permanent 3 ## 461 Denmark Regional Full-time Permanent 5 ## 472 Austria National Full-time Permanent 5 ## 532 Denmark Regional Full-time &lt;NA&gt; 4 ## 594 UK Regional Freelancer &lt;NA&gt; 5 ## 625 UK National Freelancer &lt;NA&gt; 2 ## 652 Denmark National Freelancer &lt;NA&gt; 3 ## 719 UK Regional Full-time Permanent 3 ## 853 Denmark Local Freelancer &lt;NA&gt; 4 ## 857 Denmark Local Freelancer &lt;NA&gt; 4 ## 958 Denmark National Full-time Permanent 4 ## 997 Denmark Regional Full-time Permanent 4 ## 999 Austria Regional Full-time Permanent 4 ## 1033 Denmark National Part-time Permanent 5 ## 1165 Denmark National Full-time Permanent 4 ## work_experience trust_parliament trust_government name ## 49 53 4 1 David ## 126 42 3 3 Paul ## 131 50 3 4 Caroline ## 259 42 3 3 Lennart ## 286 41 2 2 Paul ## 287 43 3 3 Jonas ## 324 51 2 3 Chantal ## 333 45 3 3 Sev ## 443 42 4 2 Florian ## 461 50 3 1 Wiebke ## 472 46 2 2 Velma ## 532 41 3 3 Charline ## 594 45 2 2 Wolf ## 625 43 3 2 Ida ## 652 49 3 3 Charline ## 719 44 3 2 Alex ## 853 43 2 1 Sev ## 857 45 2 2 Jona ## 958 44 2 1 Joe ## 997 43 3 3 Sal ## 999 45 2 1 Alex ## 1033 42 3 3 Carl ## 1165 44 3 2 Cynthia Of course, you can index more than one column: survey[survey$work_experience &gt; 40,4:5] ## temp_contract autonomy_selection ## 49 &lt;NA&gt; 4 ## 126 Permanent 4 ## 131 Permanent 5 ## 259 Permanent 4 ## 286 Permanent 3 ## 287 &lt;NA&gt; 3 ## 324 Permanent 5 ## 333 &lt;NA&gt; 4 ## 443 Permanent 3 ## 461 Permanent 5 ## 472 Permanent 5 ## 532 &lt;NA&gt; 4 ## 594 &lt;NA&gt; 5 ## 625 &lt;NA&gt; 2 ## 652 &lt;NA&gt; 3 ## 719 Permanent 3 ## 853 &lt;NA&gt; 4 ## 857 &lt;NA&gt; 4 ## 958 Permanent 4 ## 997 Permanent 4 ## 999 Permanent 4 ## 1033 Permanent 5 ## 1165 Permanent 4 Finally, you can use multiple conditions: survey[survey$work_experience &gt; 40 &amp; survey$trust_government &lt; 2,] ## country reach employment temp_contract autonomy_selection ## 49 Denmark Regional Freelancer &lt;NA&gt; 4 ## 461 Denmark Regional Full-time Permanent 5 ## 853 Denmark Local Freelancer &lt;NA&gt; 4 ## 958 Denmark National Full-time Permanent 4 ## 999 Austria Regional Full-time Permanent 4 ## work_experience trust_parliament trust_government name ## 49 53 4 1 David ## 461 50 3 1 Wiebke ## 853 43 2 1 Sev ## 958 44 2 1 Joe ## 999 45 2 1 Alex 3.7 Import data from various file formats R provides a wide range of functions and packages to import data from various file formats such as Excel, SPSS, SAS, Stata, JSON and others. Here, we will focus on some commonly used file formats and the R functions to import them. 3.7.1 Importing data from Excel We will use the readxl package to import data from Excel files. First, we need to install and load the readxl package: # Install and load the &#39;readxl&#39; package install.packages(&quot;readxl&quot;) library(readxl) To import Excel data from your working directory into R, you can now use the read_excel() function: data &lt;- read_excel(&quot;WoJ.xlsx&quot;) This will create a data frame named “data” containing the Excel data. By default, the first row of the Excel file is assumed to contain column names. 3.7.2 Importing data from JSON JSON files are a popular file format for storing structured data, such as data collected from Social Networking Sites. To import data from a JSON file into R, you can use the jsonlite package: # Install and load the &#39;jsonlite&#39; package install.packages(&quot;jsonlite&quot;) library(jsonlite) And import your data: data &lt;- fromJSON(&quot;WoJ.json&quot;) 3.7.3 Importing data from SPSS SPSS files are still commonly used in social science research and you might want to import your current SPSS projects to R. In R, we can import SPSS files using the haven package. # Install and load the &#39;haven&#39; package install.packages(&quot;haven&quot;) library(haven) To import your data into R, use the read_spss() function (here I repeated the entire working directory, but you could only write read_spss(\"WoJ.sav\")): data &lt;- read_spss(&quot;C:/Users/LaraK/Documents/IPR/WoJ.sav&quot;) By default, the read_spss() function will convert user-defined missings to NA (i.e., missings in R). If you want to read variables with user defined missings into R (e.g., keep -9 instead of turning it into NA), you can use the user_na argument: data &lt;- read_spss(&quot;C:/Users/LaraK/Documents/IPR/WoJ.sav&quot;, user_na = TRUE) read_spss reads all your labelled variables in as an object type (i.e., class) called haven_labelled that stores your label information. You can check your label information by inspecting your data in your environment (by default: right-hand side of RStudio). Just click on the blue error next to your source object: Image: Inspecting your labelled data frame NOTE FOR ADVANCED USERS: If you want to add, change, or remove any kind of labels in R, you can use the labelled package: # Install and load the &#39;labelled&#39; package install.packages(&quot;labelled&quot;) library(labelled) To add a label to a variable, use the var_label() function: var_labels &lt;- c(country = &quot;The journalist&#39;s country of origin&quot;, reach = &quot;The reach of the journalist&#39;s outlet&quot;, employment = &quot;The journalist&#39;s employment status&quot;, temp_contract = &quot;The journalist&#39;s type of contract&quot;, autonomy_selection = &quot;The journalist&#39;s perceived autonomy&quot;, work_experience = &quot;The journalist&#39;s work experience in years&quot;, trust_parliament = &quot;The journalist&#39;s trust in the current parliament&quot;, trust_government = &quot;The journalist&#39;s trust in the current government&quot;) # Creates a vector with your variable labels var_label(data) &lt;- var_labels # Applies the labels to your column variables To add value labels to a variable, use the set_value_labels function: trust_labels = c(&quot;none at all&quot; = 1, &quot;a little&quot; = 2, &quot;partly&quot; = 3, &quot;a lot&quot; = 4, &quot;very much&quot; = 5) data$trust_parliament &lt;- set_value_labels(data$trust_parliament, .labels = trust_labels) data$trust_government &lt;- set_value_labels(data$trust_government, .labels = trust_labels) To remove a variable label from a variable, use the remove_var_label function: data$trust_parliament &lt;- remove_var_label(data$trust_parliament) And to remove a value label from a variable, use the remove_val_labels function: data$trust_parliament &lt;- remove_val_labels(data$trust_parliament) For a full documentation and a helpful cheat sheet of the labelled package, click this link. It also contains information on how to use the labelled package in combination with the tidyverse. I’ve used Base R in this tutorial. 3.8 Take-Aways Setting the working directory: tells R where your folder with the data is located on your drive, setwd(your_filepath) Import data: after setting the working directory, with read.csv() (comma-separated) or read.csv2() (semicolon-separated) or the package of your choice (e.g., haven) Access variables: either by the access operator $ (dataframe&amp;variablename) or by the column index [,columnNo.] Access values: by indexing, i.e. using [ ] and row + column indices Conditions: you can select rows based on conditions, e.g.: greater &gt;, greater or equal &gt;=, equal ==, and not equal != 3.9 Additional tutorials You still have questions? The following online guides can help you with that: Import CSV Files into R Step-by-Step Guide Subsetting data Indexing into a data structure Now it’s your time to get into coding: Try Exercise 2. "],["exercise-2.html", "Exercise 2 Task 1 Task 2 Task 3", " Exercise 2 After working through Exercise 2, you’ll… have double-checked whether you understand how to import data have learned to subset variables in data frames have learned to subset observations and values in data frames Task 1 Download the “WoJ_names.csv” from LRZ Sync &amp; Share (click here) and put it into the folder that you want to use as working directory. Set your working directory and load the data into R by saving it into a source object called data. Note: This time, it’s a csv that is separated by semicolons, not by commas. Task 2 Now, print only the column to the console that shows the trust in the government. Use the $ operator first. Then try to achieve the same result using the subsetting operators, i.e. []. Task 3 Print only the first 6 trust in the government numbers to the console. Use the $ operator first. Then try to achieve the same result using the subsetting operators, i.e. []. When you’re ready to look at the solutions, you can find them here:Solutions for Exercise 2. "],["solutions.html", "Solutions Solutions for Exercise 1 Solutions for Exercise 2", " Solutions This is where you’ll find solutions for all of the tutorials. Solutions for Exercise 1 Task 1 Below you will see multiple choice questions. Please try to identify the correct answers. 1, 2, 3 and 4 correct answers are possible for each question. 1. What panels are part of RStudio? Solution: source (x) console (x) packages, files &amp; plots (x) 2. How do you activate R packages after you have installed them? Solution: library() (x) 3. How do you create a vector in R with elements 1, 2, 3? Solution: c(1,2,3) (x) 4. Imagine you have a vector called ‘vector’ with 10 numeric elements. How do you retrieve the 8th element? Solution: vector[8] (x) 5. Imagine you have a vector called ‘hair’ with 5 elements: brown, black, red, blond, other. How do you retrieve the color ‘blond’? Solution: hair[4] (x) Task 2 Create a numeric vector with 8 values and assign the name age to the vector. First, display all elements of the vector. Then print only the 5th element. After that, display all elements except the 5th. Finally, display the elements at the positions 6 to 8. Solution: age &lt;- c(65,52,73,71,80,62,68,87) age ## [1] 65 52 73 71 80 62 68 87 age[5] ## [1] 80 age[-5] ## [1] 65 52 73 71 62 68 87 age[6:8] ## [1] 62 68 87 Task 3 Create a non-numeric, i.e. character, vector with 4 elements and assign the name eye_color to the vector. First, print all elements of this vector to the console. Then have only the value in the 2nd element displayed, then all values except the 2nd element. At the end, display the elements at the positions 2 to 4. Solution: eye_color &lt;- c(&quot;blue&quot;, &quot;green&quot;, &quot;brown&quot;, &quot;grey&quot;) eye_color ## [1] &quot;blue&quot; &quot;green&quot; &quot;brown&quot; &quot;grey&quot; eye_color[2] ## [1] &quot;green&quot; eye_color[-2] ## [1] &quot;blue&quot; &quot;brown&quot; &quot;grey&quot; eye_color[2:4] ## [1] &quot;green&quot; &quot;brown&quot; &quot;grey&quot; # Alternatively, you could also use this approach: eye_color[c(2)] ## [1] &quot;green&quot; eye_color[c(-2)] ## [1] &quot;blue&quot; &quot;brown&quot; &quot;grey&quot; eye_color[c(2,3,4)] ## [1] &quot;green&quot; &quot;brown&quot; &quot;grey&quot; Solutions for Exercise 2 Task 1 Download the “WoJ_names.csv” from LRZ Sync &amp; Share (click here) and put it into the folder that you want to use as working directory. Set your working directory and load the data into R by saving it into a source object called data. Note: This time, it’s a csv that is separated by semicolons, not by commas. Solution: setwd(&quot;C:/Users/LaraK/Documents/IPR/&quot;) data &lt;- read.csv2(&quot;WoJ_names.csv&quot;, header = TRUE) Task 2 Now, print only the column to the console that shows the trust in government. Use the $ operator first. Then try to achieve the same result using the subsetting operators, i.e. []. Solution: data$trust_government # first version ## [1] 3 4 4 4 2 4 1 3 1 3 2 3 2 2 2 2 3 3 4 3 3 2 3 4 3 3 3 2 3 3 3 3 4 2 3 2 2 ## [38] 2 2 3 3 3 3 4 3 4 3 2 1 4 1 2 3 3 3 2 3 2 3 4 3 1 3 3 3 3 4 2 2 4 4 4 3 2 ## [75] 3 4 2 3 3 4 3 2 2 3 2 2 3 3 3 2 2 4 2 3 3 3 2 2 2 3 3 2 3 2 2 1 3 4 4 3 3 ## [112] 2 2 3 2 4 2 3 3 3 3 3 3 3 2 3 3 4 3 2 4 2 3 3 3 5 1 3 4 1 4 4 4 2 4 4 3 1 ## [149] 3 2 3 3 3 4 3 3 3 2 2 3 4 4 1 1 4 1 2 3 3 2 4 3 4 2 3 2 2 1 2 3 3 2 2 2 3 ## [186] 2 3 4 2 3 1 1 3 3 2 3 3 3 1 3 3 4 3 2 2 3 4 2 3 3 3 2 3 2 3 2 1 3 3 3 2 2 ## [223] 2 4 3 3 3 1 1 3 2 3 2 4 3 2 2 3 3 1 3 3 2 3 2 3 2 4 2 2 2 3 4 4 3 2 2 4 3 ## [260] 3 3 3 2 4 4 2 3 3 3 3 3 3 3 3 2 4 3 3 2 3 3 3 4 5 2 2 3 2 1 3 4 1 3 4 2 2 ## [297] 3 3 1 4 3 3 2 1 4 2 1 3 3 3 4 3 3 4 2 2 4 1 3 2 3 3 3 3 4 3 4 5 1 3 2 3 3 ## [334] 3 3 1 3 3 3 4 4 1 3 3 3 3 4 3 2 2 3 3 3 3 3 2 3 3 3 1 4 4 2 2 3 3 2 3 4 3 ## [371] 3 1 2 4 3 2 1 4 3 5 2 3 1 4 4 1 4 2 4 3 1 4 2 3 4 3 4 3 4 3 2 4 3 2 3 4 3 ## [408] 3 3 1 3 3 3 2 3 3 4 4 3 3 4 3 4 3 2 3 3 3 2 1 2 3 3 4 2 2 2 2 4 3 4 2 2 3 ## [445] 3 3 1 3 3 2 3 2 3 4 2 2 3 3 3 4 1 4 5 4 3 4 3 3 3 2 3 2 3 2 4 3 4 3 3 1 3 ## [482] 2 3 2 3 3 2 2 2 2 3 2 4 3 2 3 3 2 3 4 2 2 3 4 4 1 3 3 3 2 4 3 4 2 3 2 3 3 ## [519] 2 4 1 2 3 4 3 2 3 2 2 2 3 3 4 3 4 2 2 2 3 3 2 3 3 2 4 3 2 3 3 4 3 3 2 3 2 ## [556] 2 2 4 3 3 1 2 1 4 4 4 3 3 3 3 4 2 3 2 2 3 4 4 3 3 3 2 3 3 2 3 3 2 3 4 2 3 ## [593] 3 2 4 3 3 1 2 3 3 1 3 4 1 3 4 4 3 2 3 3 3 4 2 2 3 3 2 1 4 1 3 3 2 4 3 3 1 ## [630] 3 1 3 2 3 3 3 3 3 2 2 4 3 3 2 4 2 3 3 3 4 4 3 3 3 3 1 4 2 3 2 1 3 2 2 3 2 ## [667] 4 3 2 3 3 4 3 3 2 2 2 3 2 4 4 2 4 4 2 2 3 3 4 3 4 2 3 3 2 4 3 3 3 3 2 2 3 ## [704] 4 4 4 2 3 3 4 3 3 2 2 2 3 3 3 2 2 3 1 1 3 3 2 2 3 2 3 2 3 1 3 3 2 2 3 4 3 ## [741] 3 2 4 2 3 3 3 3 2 4 3 5 3 4 3 2 2 3 3 2 3 3 3 3 2 3 4 4 3 4 3 4 4 3 3 2 3 ## [778] 4 3 3 3 3 3 4 3 2 2 4 2 5 4 2 4 3 3 2 3 4 3 3 3 4 3 2 4 4 4 3 3 3 3 4 4 3 ## [815] 3 2 3 3 1 4 2 3 2 4 4 3 1 3 4 4 4 3 4 3 3 1 3 3 3 3 2 4 4 3 2 3 2 3 3 2 3 ## [852] 4 1 3 3 2 2 3 1 1 3 2 3 2 4 4 3 3 3 2 3 4 2 2 3 2 2 3 1 3 2 3 4 4 3 2 3 2 ## [889] 4 3 2 3 3 2 3 1 3 3 3 1 1 4 2 2 2 3 2 3 4 2 3 3 3 2 3 4 2 2 3 4 3 3 4 2 3 ## [926] 3 2 3 3 4 3 2 3 1 3 2 4 3 3 4 2 4 3 2 3 3 4 3 1 3 2 4 3 4 4 4 2 1 2 4 1 4 ## [963] 4 5 4 3 3 3 3 2 3 4 2 2 2 3 3 2 4 4 2 3 5 1 3 2 3 3 2 2 2 4 1 1 3 3 3 3 1 ## [1000] 1 4 3 2 4 2 3 4 3 2 4 3 3 3 3 3 3 3 1 3 4 2 3 3 4 4 3 4 2 2 3 1 2 3 3 3 3 ## [1037] 2 4 4 3 4 4 2 3 3 3 4 3 4 2 3 3 3 3 3 3 2 4 3 3 2 5 2 3 4 4 3 2 3 2 3 3 4 ## [1074] 2 3 3 3 2 4 3 3 4 2 3 1 3 2 2 2 4 2 1 4 2 4 3 3 4 4 2 2 3 3 3 3 3 3 2 3 3 ## [1111] 2 1 2 2 2 4 3 3 2 4 2 2 3 3 2 3 3 3 3 2 3 4 3 2 4 3 3 4 4 3 1 4 3 3 4 4 3 ## [1148] 3 4 2 4 3 3 4 3 3 2 2 2 3 3 3 3 3 2 2 3 3 3 3 3 3 3 3 3 4 4 3 3 3 3 3 4 3 ## [1185] 2 2 3 2 3 3 3 3 4 3 4 4 3 1 3 4 data[,8] # second version ## [1] 3 4 4 4 2 4 1 3 1 3 2 3 2 2 2 2 3 3 4 3 3 2 3 4 3 3 3 2 3 3 3 3 4 2 3 2 2 ## [38] 2 2 3 3 3 3 4 3 4 3 2 1 4 1 2 3 3 3 2 3 2 3 4 3 1 3 3 3 3 4 2 2 4 4 4 3 2 ## [75] 3 4 2 3 3 4 3 2 2 3 2 2 3 3 3 2 2 4 2 3 3 3 2 2 2 3 3 2 3 2 2 1 3 4 4 3 3 ## [112] 2 2 3 2 4 2 3 3 3 3 3 3 3 2 3 3 4 3 2 4 2 3 3 3 5 1 3 4 1 4 4 4 2 4 4 3 1 ## [149] 3 2 3 3 3 4 3 3 3 2 2 3 4 4 1 1 4 1 2 3 3 2 4 3 4 2 3 2 2 1 2 3 3 2 2 2 3 ## [186] 2 3 4 2 3 1 1 3 3 2 3 3 3 1 3 3 4 3 2 2 3 4 2 3 3 3 2 3 2 3 2 1 3 3 3 2 2 ## [223] 2 4 3 3 3 1 1 3 2 3 2 4 3 2 2 3 3 1 3 3 2 3 2 3 2 4 2 2 2 3 4 4 3 2 2 4 3 ## [260] 3 3 3 2 4 4 2 3 3 3 3 3 3 3 3 2 4 3 3 2 3 3 3 4 5 2 2 3 2 1 3 4 1 3 4 2 2 ## [297] 3 3 1 4 3 3 2 1 4 2 1 3 3 3 4 3 3 4 2 2 4 1 3 2 3 3 3 3 4 3 4 5 1 3 2 3 3 ## [334] 3 3 1 3 3 3 4 4 1 3 3 3 3 4 3 2 2 3 3 3 3 3 2 3 3 3 1 4 4 2 2 3 3 2 3 4 3 ## [371] 3 1 2 4 3 2 1 4 3 5 2 3 1 4 4 1 4 2 4 3 1 4 2 3 4 3 4 3 4 3 2 4 3 2 3 4 3 ## [408] 3 3 1 3 3 3 2 3 3 4 4 3 3 4 3 4 3 2 3 3 3 2 1 2 3 3 4 2 2 2 2 4 3 4 2 2 3 ## [445] 3 3 1 3 3 2 3 2 3 4 2 2 3 3 3 4 1 4 5 4 3 4 3 3 3 2 3 2 3 2 4 3 4 3 3 1 3 ## [482] 2 3 2 3 3 2 2 2 2 3 2 4 3 2 3 3 2 3 4 2 2 3 4 4 1 3 3 3 2 4 3 4 2 3 2 3 3 ## [519] 2 4 1 2 3 4 3 2 3 2 2 2 3 3 4 3 4 2 2 2 3 3 2 3 3 2 4 3 2 3 3 4 3 3 2 3 2 ## [556] 2 2 4 3 3 1 2 1 4 4 4 3 3 3 3 4 2 3 2 2 3 4 4 3 3 3 2 3 3 2 3 3 2 3 4 2 3 ## [593] 3 2 4 3 3 1 2 3 3 1 3 4 1 3 4 4 3 2 3 3 3 4 2 2 3 3 2 1 4 1 3 3 2 4 3 3 1 ## [630] 3 1 3 2 3 3 3 3 3 2 2 4 3 3 2 4 2 3 3 3 4 4 3 3 3 3 1 4 2 3 2 1 3 2 2 3 2 ## [667] 4 3 2 3 3 4 3 3 2 2 2 3 2 4 4 2 4 4 2 2 3 3 4 3 4 2 3 3 2 4 3 3 3 3 2 2 3 ## [704] 4 4 4 2 3 3 4 3 3 2 2 2 3 3 3 2 2 3 1 1 3 3 2 2 3 2 3 2 3 1 3 3 2 2 3 4 3 ## [741] 3 2 4 2 3 3 3 3 2 4 3 5 3 4 3 2 2 3 3 2 3 3 3 3 2 3 4 4 3 4 3 4 4 3 3 2 3 ## [778] 4 3 3 3 3 3 4 3 2 2 4 2 5 4 2 4 3 3 2 3 4 3 3 3 4 3 2 4 4 4 3 3 3 3 4 4 3 ## [815] 3 2 3 3 1 4 2 3 2 4 4 3 1 3 4 4 4 3 4 3 3 1 3 3 3 3 2 4 4 3 2 3 2 3 3 2 3 ## [852] 4 1 3 3 2 2 3 1 1 3 2 3 2 4 4 3 3 3 2 3 4 2 2 3 2 2 3 1 3 2 3 4 4 3 2 3 2 ## [889] 4 3 2 3 3 2 3 1 3 3 3 1 1 4 2 2 2 3 2 3 4 2 3 3 3 2 3 4 2 2 3 4 3 3 4 2 3 ## [926] 3 2 3 3 4 3 2 3 1 3 2 4 3 3 4 2 4 3 2 3 3 4 3 1 3 2 4 3 4 4 4 2 1 2 4 1 4 ## [963] 4 5 4 3 3 3 3 2 3 4 2 2 2 3 3 2 4 4 2 3 5 1 3 2 3 3 2 2 2 4 1 1 3 3 3 3 1 ## [1000] 1 4 3 2 4 2 3 4 3 2 4 3 3 3 3 3 3 3 1 3 4 2 3 3 4 4 3 4 2 2 3 1 2 3 3 3 3 ## [1037] 2 4 4 3 4 4 2 3 3 3 4 3 4 2 3 3 3 3 3 3 2 4 3 3 2 5 2 3 4 4 3 2 3 2 3 3 4 ## [1074] 2 3 3 3 2 4 3 3 4 2 3 1 3 2 2 2 4 2 1 4 2 4 3 3 4 4 2 2 3 3 3 3 3 3 2 3 3 ## [1111] 2 1 2 2 2 4 3 3 2 4 2 2 3 3 2 3 3 3 3 2 3 4 3 2 4 3 3 4 4 3 1 4 3 3 4 4 3 ## [1148] 3 4 2 4 3 3 4 3 3 2 2 2 3 3 3 3 3 2 2 3 3 3 3 3 3 3 3 3 4 4 3 3 3 3 3 4 3 ## [1185] 2 2 3 2 3 3 3 3 4 3 4 4 3 1 3 4 Task 3 Print only the first 6 trust in government numbers to the console. Use the $ operator first. Then try to achieve the same result using the subsetting operators, i.e. []. Solution: data$trust_government[1:6] # first version ## [1] 3 4 4 4 2 4 data[1:6,8] # second version ## [1] 3 4 4 4 2 4 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
